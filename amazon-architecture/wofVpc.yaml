AWSTemplateFormatVersion: "2010-09-09"
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'

  publicA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: "eu-central-1a"
      MapPublicIpOnLaunch: true

  privateA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: "eu-central-1b"

  privateB:
     Type: AWS::EC2::Subnet
     Properties:
       VpcId:
         Ref: VPC
       CidrBlock: 10.0.2.0/24
       AvailabilityZone: "eu-central-1c"

  vpcIG:
    Type: AWS::EC2::InternetGateway

  attachGatewayToVPC:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: vpcIG

  routeTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC

  internetGatewayRoute:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId:
         Ref: routeTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId:
         Ref: vpcIG

  publicSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Allow http(s) and SSH to client host
        VpcId:
          Ref: VPC
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  privateSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Security Group for private WoF subnets
        VpcId:
          Ref: VPC

  allowMySQLOnPrivateSG:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
        GroupId: !Ref privateSG
        IpProtocol: tcp
        FromPort: 3306
        ToPort: 3306
        SourceSecurityGroupId: !GetAtt publicSG.GroupId

  dynamoEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      RouteTableIds:
        - !Ref routeTable
      ServiceName: "com.amazonaws.eu-central-1.dynamodb"
      VpcId: !Ref VPC

  wofDbSubnetGroup:
      Type: AWS::RDS::DBSubnetGroup
      Properties:
        DBSubnetGroupDescription: The DB subnet group for the WikiOnFire Amazon RDS
        DBSubnetGroupName: wofDbSubnetGroup
        SubnetIds:
        - !Ref privateA
        - !Ref privateB

  wofRds:
    Type: AWS::RDS::DBInstance
    Properties:
      AvailabilityZone: "eu-central-1b"
      DBInstanceIdentifier: "wofMySql"
      DBName: "db"
      DBInstanceClass: "db.t2.micro"
      DBSubnetGroupName: !Ref wofDbSubnetGroup
      AllocatedStorage: 20
      Engine: MySQL
      EngineVersion: 8.0.16
      MasterUsername: admin
      MasterUserPassword: whoatemycookie
      StorageType: "gp2"
      VPCSecurityGroups:
      - !Ref privateSG

Outputs:
  publicSubnetAId:
    Description: The id of the public subnet A of the WoF VPC in the eu-central-1 region
    Value: !Ref publicA
    Export:
      Name: "publicSubnetAId"
  publicSGId:
    Description: The id of the default security group for the EC2 instances on the public subnets of the WoF VPC in the eu-central-1 region.
    Value: !Ref publicSG
    Export:
      Name: "publicSGId"
