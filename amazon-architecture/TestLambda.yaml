AWSTemplateFormatVersion: "2010-09-09"
Resources:
  helloLambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"

  helloLambda:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: nodejs14.x
      Handler: index.handler
      Role: !GetAtt helloLambdaRole.Arn
      Code:
        ZipFile: |
          exports.handler = async (event) => {
            const response = {
                statusCode: 200,
                body: JSON.stringify('Hello from Lambda!'),
            };
            return response;
          };
      Description: Returns hello world
      TracingConfig:
        Mode: Active

  helloLambdaEventRule:
    Type: "AWS::Events::Rule"
    Properties:
      Description: Triggers a hello world lambda every day
      Name: helloWorldLambdaEventRule
      ScheduleExpression: "rate(1 day)"
      State: "ENABLED"
      Targets:
        - Arn: !GetAtt helloLambda.Arn
          Id: helloWorldLambdaTarget
          RetryPolicy:
            MaximumRetryAttempts: 4
            MaximumEventAgeInSeconds: 400

  permissionForEventToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref helloLambda
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt helloLambdaEventRule.Arn
